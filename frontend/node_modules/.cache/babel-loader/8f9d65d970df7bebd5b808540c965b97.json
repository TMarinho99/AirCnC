{"ast":null,"code":"import _slicedToArray from \"/home/thiago/ciencia da computacao/cursos/Thiago_Marinho/Projetos/cursosRocketseat/Arcnc/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/thiago/ciencia da computacao/cursos/Thiago_Marinho/Projetos/cursosRocketseat/Arcnc/frontend/src/pages/Dashboard/index.js\";\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequest = _useState4[1];\n\n  const user_id = localStorage.getItem('user');\n  const socket = useMemo(() => socketio('http://localhost:3333', {\n    query: {\n      user_id\n    }\n  }), [user_id]);\n  useEffect(() => {\n    socket.on('booking_request', data => {\n      setRequest([...requests, data]);\n    });\n  }, [requests, socket]);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []);\n\n  async function handleAccept(id) {\n    await api.post(`/bookings/${id}/approvals`);\n    setRequest(requests.filter(request => request._id !== id));\n  }\n\n  async function handleReject(id) {\n    await api.post(`/bookings/${id}/rejections`);\n    setRequest(requests.filter(request => request._id !== id));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, request.map(request => React.createElement(\"li\", {\n    key: request._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, request.user.email, \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, request.spot.company), \" para a data \", React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, request.date), \" \")), React.createElement(\"button\", {\n    className: \"accept\",\n    onClick: () => handleAccept(request._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Aceitar\"), React.createElement(\"button\", {\n    className: \"reject\",\n    onClick: () => handleReject(request._id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Rejeitar\")))), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: `url(${spot.thumbnail_url})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, spot.price ? `R$${spot.price}` : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" Cadastrar novo spot \")));\n}","map":{"version":3,"sources":["/home/thiago/ciencia da computacao/cursos/Thiago_Marinho/Projetos/cursosRocketseat/Arcnc/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","useMemo","Link","socketio","api","Dashboard","spots","setSpots","requests","setRequest","user_id","localStorage","getItem","socket","query","on","data","loadSpots","response","get","headers","handleAccept","id","post","filter","request","_id","handleReject","map","user","email","spot","company","date","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo } from 'react'\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client'\nimport api from '../../services/api';\n\nimport './styles.css';\n\nexport default function Dashboard(){\n    const [ spots, setSpots ] = useState([]);\n    const [requests, setRequest] = useState([]);\n\n    const user_id = localStorage.getItem('user');\n    const socket = useMemo(() => socketio('http://localhost:3333', {\n        query: { user_id }\n    }), [user_id]);\n\n    useEffect(() => {\n        socket.on('booking_request', data => {\n            setRequest([...requests, data])\n               \n        })\n\n\n    }, [requests, socket]);\n\n    useEffect(() => {\n        async function loadSpots() {\n            const user_id = localStorage.getItem('user');\n            const response = await api.get('/dashboard', { \n                headers: { user_id }\n            });\n\n            setSpots(response.data);\n        }\n        loadSpots() \n    }, [])\n    \n    async function handleAccept(id){\n        await api.post(`/bookings/${id}/approvals`);\n\n        setRequest(requests.filter(request => request._id !== id));\n    }\n\n    async function handleReject(id){\n        await api.post(`/bookings/${id}/rejections`);\n\n        setRequest(requests.filter(request => request._id !== id));\n    }\n\n    \n    return (\n        <>\n\n            <ul className=\"notifications\">\n               {request.map(request => (\n                   <li key={request._id}>\n                       <p>\n                        <strong>{request.user.email} estÃ¡ solicitando uma reserva em <strong>{request.spot.company }</strong> para a data <strong>{request.date}</strong> </strong>\n                       </p>\n                       <button className=\"accept\" onClick={() => handleAccept(request._id)}>Aceitar</button>\n                       <button className=\"reject\" onClick={() => handleReject(request._id)}>Rejeitar</button>\n                   </li>\n               ))}\n            </ul>\n\n            <ul className=\"spot-list\">\n                {spots.map(spot => (\n                    <li key={spot._id}>\n                        <header style={{  backgroundImage: `url(${spot.thumbnail_url})`  }}/>\n                        <strong>{spot.company}</strong>\n                        <span>{spot.price ? `R$${spot.price}` : 'GRATUITO'}</span>\n                    </li>\n                ))}\n\n            </ul>\n            <Link to=\"/new\">\n               <button className='btn'> Cadastrar novo spot </button>\n            </Link>\n\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}